{"version":3,"sources":["components/LogInPage.jsx","components/UserPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","props","useState","emailVal","setEmailVal","passlVal","setPasslVal","classes","signInReq","a","fetch","method","headers","body","JSON","stringify","then","res","status","setLoged","json","console","log","data","setData","Container","component","maxWidth","CssBaseline","className","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoFocus","onChange","e","target","value","type","autoComplete","Button","color","onClick","UserPage","userData","setUserData","useEffect","getUserInfo","accessToken","token","src","alt","email","App","loged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QA+ErBa,EA3EA,SAAAC,GAAU,IAAD,EAEYC,mBAAS,mBAFrB,mBAEbC,EAFa,KAEHC,EAFG,OAGYF,mBAAS,QAHrB,mBAGbG,EAHa,KAGHC,EAHG,KAKdC,EAAUzB,IAEV0B,EAAS,uCAAG,sBAAAC,EAAA,sEACRC,MAAM,6CAA8C,CACtDC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU,CAAE,SAAY,EAAG,MAASZ,EAAU,SAAYE,MAExEW,MAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,OAEJ,OADAjB,EAAMkB,UAAS,GACRF,EAAIG,OAEXC,QAAQC,IAAIL,MAGnBD,MAAK,SAAAO,GAAI,OAAItB,EAAMuB,QAAQD,MAjBd,2CAAH,qDAoBf,OACI,eAACE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWtB,EAAQtB,MAAxB,UACI,cAAC6C,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,KAAnC,4BAGA,uBAAMF,UAAWtB,EAAQV,KAAMmC,YAAU,EAAzC,UACI,cAACC,EAAA,EAAD,CACIF,QAAQ,WACRvC,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,WAAS,EACTC,SAAU,SAAAC,GAAC,OAAIrC,EAAYqC,EAAEC,OAAOC,QACpCA,MAAOxC,IAEX,cAAC8B,EAAA,EAAD,CACIF,QAAQ,WACRvC,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNO,KAAK,WACLR,GAAG,WACHS,aAAa,mBACbL,SAAU,SAAAC,GAAC,OAAInC,EAAYmC,EAAEC,OAAOC,QACpCA,MAAOtC,IAEX,cAACyC,EAAA,EAAD,CACIX,WAAS,EACTJ,QAAQ,YACRgB,MAAM,UACNlB,UAAWtB,EAAQR,OACnBiD,QAAS,kBAAIxC,KALjB,+BCpBLyC,G,MA/DE,SAAAhD,GAAU,IAAD,EAEUC,mBAAS,IAFnB,mBAEfgD,EAFe,KAELC,EAFK,KAItBC,qBAAU,WACoB,qBAAfnD,EAAMsB,MACb8B,EAAYpD,EAAMsB,KAAK+B,eAE5B,CAACrD,IAEJ,IAAMoD,EAAW,uCAAG,WAAME,GAAN,SAAA9C,EAAA,sEAEVC,MAAM,sDAAuD,CAC/DC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2B2C,MAG9BvC,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAChBJ,MAAK,SAAAO,GAAI,OAAI4B,EAAY5B,MAXd,2CAAH,sDAqBXhB,EAPYxB,aAAW,SAACC,GAAD,MAAY,CACrCe,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,GAC5BW,MAAO,YAIChB,GAEhB,OACI,mCAEiC,qBAAlBoE,EAAS3B,KACZ,sBAAKM,UAAU,UAAf,UACI,yCAAYqB,EAAS3B,KAAKe,QAC1B,qBAAKT,UAAU,eAAf,SACI,qBAAKA,UAAU,MAAM2B,IAAI,kGAAkGC,IAAI,UAEnI,sBAAK5B,UAAU,gBAAf,UACI,oBAAGA,UAAU,OAAb,wBAA+B,sBAAMA,UAAU,aAAhB,SAA8BqB,EAAS3B,KAAKe,UAC3E,oBAAGT,UAAU,OAAb,oBAA2B,sBAAMA,UAAU,aAAhB,SAA8BqB,EAAS3B,KAAKmC,cAE3E,cAACZ,EAAA,EAAD,CACAX,WAAS,EACTJ,QAAQ,YACRgB,MAAM,UACNlB,UAAWtB,EAAQR,OACnBiD,QAAS,kBAAI/C,EAAMkB,UAAS,IAL5B,wBAWJ,SC7CLwC,MAZf,WAAgB,IAAD,EAEazD,oBAAS,GAFtB,mBAEN0D,EAFM,KAECzC,EAFD,OAGWjB,mBAAS,IAHpB,mBAGNqB,EAHM,KAGAC,EAHA,KAKb,OACE,qBAAKK,UAAU,MAAf,SACI+B,EAA8D,cAAC,EAAD,aAAUzC,SAAUA,GAAcI,IAAxF,cAAC,EAAD,CAAWC,QAASA,EAASL,SAAUA,OCAxC0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac82f4af.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst SignIn = props => {\r\n    \r\n    const [emailVal, setEmailVal] = useState('user@ozitag.com');\r\n    const [passlVal, setPasslVal] = useState('user');\r\n\r\n    const classes = useStyles();\r\n\r\n    const signInReq = async () => {\r\n        await fetch('https://tager.dev.ozitag.com/api/auth/user', {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ \"clientId\": 1, \"email\": emailVal, \"password\": passlVal })\r\n        })\r\n        .then(res => {\r\n            if (res.status === 200) {   \r\n                props.setLoged(true);\r\n                return res.json();      \r\n            } else {\r\n                console.log(res);\r\n            }\r\n        })\r\n        .then(data => props.setData(data));\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in OZITAG\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoFocus\r\n                        onChange={e => setEmailVal(e.target.value)}\r\n                        value={emailVal}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={e => setPasslVal(e.target.value)}\r\n                        value={passlVal}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={()=>signInReq()}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React, { useEffect, useState } from 'react';\r\nimport './UserPage.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst UserPage = props => {\r\n\r\n    const [userData, setUserData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (typeof props.data !== 'undefined') {\r\n            getUserInfo(props.data.accessToken);\r\n        }\r\n    }, [props]);\r\n\r\n    const getUserInfo = async token => {\r\n\r\n        await fetch('https://tager.dev.ozitag.com/api/tager/user/profile', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => setUserData(data))\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n            width: \"200px\"\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                typeof userData.data !== 'undefined' ?\r\n                    <div className=\"wrapper\">\r\n                        <h1>Hello, {userData.data.name}</h1>\r\n                        <div className=\"avaConteiner\">\r\n                            <img className=\"ava\" src=\"https://png.pngtree.com/element_our/20190604/ourlarge/pngtree-user-avatar-boy-image_1482937.jpg\" alt=\"ava\" />\r\n                        </div>\r\n                        <div className=\"infoConteiner\">\r\n                            <p className=\"info\">User name: <span className=\"info__span\">{userData.data.name}</span></p>\r\n                            <p className=\"info\">Email: <span className=\"info__span\">{userData.data.email}</span></p>\r\n                        </div>\r\n                        <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={()=>props.setLoged(false)}\r\n                    >\r\n                        Log out\r\n                    </Button>\r\n                    </div>\r\n                    :\r\n                    null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPage;","import './App.css';\nimport LoginPage from \"./components/LogInPage\";\nimport { useState } from \"react\";\nimport UserPage from \"./components/UserPage\";\n\nfunction App() {\n\n  const [loged, setLoged] = useState(false);\n  const [data, setData] = useState({});\n\n  return (\n    <div className=\"App\">\n      {!loged ? <LoginPage setData={setData} setLoged={setLoged} /> : <UserPage setLoged={setLoged} {...data} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}